class Solution {
public:
    int minDominoRotations(vector<int>& A, vector<int>& B) {
        int upper = A[0], lower = B[0], len = A.size();
        if(len <= 1) return 0;
        int upperAnsA = 0, upperAnsB = 0, lowerAnsA = 0, lowerAnsB = 0;
        bool upperPass = true, lowerPass = true;

        for(int i = 0; i < len; ++i){
            if(A[i] != upper && B[i] != upper) upperPass = false;
            if(A[i] != lower && B[i] != lower) lowerPass = false;
            if(A[i] != upper && B[i] == upper) upperAnsA++;
            if(A[i] == upper && B[i] != upper) upperAnsB++;
            if(A[i] == lower && B[i] != lower) lowerAnsA++;
            if(A[i] != lower && B[i] == lower) lowerAnsB++;
        }

        if(!upperPass && !lowerPass) return -1;
        if(!upperPass && lowerPass) return min(lowerAnsA, lowerAnsB);
        if(!lowerPass && upperPass) return min(upperAnsA, upperAnsB);

        return min(min(lowerAnsA, lowerAnsB), min(upperAnsA, upperAnsB));
    }
};
